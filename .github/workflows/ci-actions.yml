name: RECRYPTOR CodeQL Analysis

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  analyze:
    name: CodeQL Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        language: [go, cpp]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache Go modules to speed up builds
      - name: Cache Go modules
        if: matrix.language == 'go'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Setup Go if analyzing Go
      - name: Setup Go
        if: matrix.language == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # Install C/C++ build essentials if analyzing C++
      - name: Install C/C++ Build Essentials
        if: matrix.language == 'cpp'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      # Initialize CodeQL with the correct language
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      # Build Go project (if applicable)
      - name: Build Go Project
        if: matrix.language == 'go'
        run: |
          go build -v ./...
          go test -v ./...

      # Build C/C++ Project (if applicable)
      - name: Build C/C++ Project
        if: matrix.language == 'cpp'
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
        continue-on-error: true # Prevents failure if build is not required

      # CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
